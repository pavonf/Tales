IT490 - Systems Integreation 
Authors: Gabriel Aquende, Edwin Rodriguez, Artur Serafim, Franklin Pavon 
Project Name : Tales 
Version: 1.0 (Midterm)

About : 
The Tales project is a cocktail recommendation application based 
on a quiz the user take. The quiz will be asking the user 1) If they want a 
alchholic drink or not 2) What category of drinks they want 3) If they 
select an alchholic drink then it will ask what primary liquor they want 
4) The last question will ask what ingrediants or flavor notes the user wants
to taste in their drink. 

Technologies:
The Tales projects utilizes PHP, JavaScript, HTML, BS, and CSS 
on the Front End. The DMZ is a file of Python functions that querey the API and
returns results. Specifcally the API's that will be utilized The DB uses MySQL in 
order to store data. Lastly RabbitMQ communicates with the Front End, DMZ, and the 
Database. RabbitMQ is a messaging system that helps glue all our systems together
without communcating directly with each other. 

Launch:
First RabbitMQ server must be started on one VM. Next the Database will have the scripts 
for Registration, Login, User, Friends , and Favorites that will listen to user 
Quereies generated by the Front End. At the same time the Database runs their script the 
DMZ will be running scripts for recommended drinks, popular drinks, and for custom features
like plan my night. The Front End is then started by getting onto the local host which contains 
our website. The user is then prompted to register and log in. They are then able to select what
action they would like to do and if any of those options require access to live CocktailDB or 
Yelp data then the DMZ will go out and get the desired information. 

RabbitMQ: 
For RabbitMQ, simply turn on service and monitor queues to confirm that messages are being 
sent to correct queues. Queues to be monitored are APIsend, Register, User, alcoholic,
alcoholicReply, favorites,friends, friendsReply, login, loginReply, newFriends, popular, 
quiz and registerReply. 

Front End: 
The front is what the user sees. It is the only way the user is able to naviagte the application.
A user must register or log in first then select what option they would like. s

Database: 
The database is where we hold most of the data outside of drinks and their descriptions.
The database holds, the users table, registrations table, favorite drinks table and friends 
table. We  use the database as a way to store important data and we have a file called sqlCommands.py 
that holds most of the important queries that we need to insert or select data from these tables.

DMZ: 
The API's being used are TheCockTailDB and Yelp. TheCocktailDB provides various attributes about cocktails 
which includes ID, name, picture, Ingrediants, How to guide on making it, whether it's alcoholic or not, 
type of glass served, etc. I currently have a python file with all the functions needed, the DMZ will be 
listening to the which queue the request comes in and based on that I will run a certain function 
